<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <DefaultFaultRule name="all">
    <AlwaysEnforce>true</AlwaysEnforce>
    <Step>
      <Name>FC-setCors</Name>
    </Step>
    <Step>
      <Name>JS-setLoggingVariables</Name>
    </Step>
    <Condition>(error.status.code!=200) or (error.status.code!=201) or (error.status.code!=202) or (error.status.code!=203) or (error.status.code!=204)</Condition>
  </DefaultFaultRule>
  <FaultRules>
    <FaultRule name="JTP-error">
      <Step>
        <Name>AM-inputError</Name>
      </Step>
      <Condition>(jsonattack.JTP-message.failed = true)</Condition>
    </FaultRule>
    <FaultRule name="JTP-card-ps-orchestrator-onlyerror">
      <Step>
        <Name>AM-inputError</Name>
      </Step>
      <Condition>(jsonattack.JTP-card-ps-orchestrator-only.failed = true)</Condition>
    </FaultRule>
    <FaultRule name="REP-error">
      <Step>
        <Name>AM-inputError</Name>
      </Step>
      <Condition>(regularexpressionprotection.REP-Generic-Threat-Protection.failed = true)</Condition>
    </FaultRule>
  </FaultRules>
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>FC-securityChecks</Name>
      </Step>
      <Step>
        <Name>AM-setSIEMIndex</Name>
      </Step>
    </Request>
    <Response/>
  </PreFlow>
  <Flows>
    <Flow name="api/v1/folder/confirm">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/confirm") and (request.verb = "POST") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="api/v1/folder/step-back">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/step-back") and (request.verb = "POST") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="/api/v1/folder/{ndg}/check">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/*/check") and (request.verb = "GET") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="/api/v1/folder/{ndg}/details">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/*/details") and (request.verb = "GET") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="/api/v1/folder/summary">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/summary") and (request.verb = "GET") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="/api/v1/folder/credit-data">
      <Description/>
      <Request/>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/api/v1/folder/credit-data") and (request.verb = "PUT") and (organization.name == "ucs-us-g4c-pez-hvpc-01" or organization.name == "ucs-g4c-dmz-003-apigee-uat")</Condition>
    </Flow>
    <Flow name="notFound">
      <Description/>
      <Request>
        <Step>
          <Name>RF-flowNotFound</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>
  </Flows>
  <PostFlow name="PostFlow">
    <Request>
      <Step>
        <Name>JS-setLoggingVariables</Name>
      </Step>
      <Step>
        <Condition>organization.name != "ucs-us-g4c-pez-hvpc-01"</Condition>
        <Name>FC-setCors</Name>
      </Step>
    </Request>
    <Response/>
  </PostFlow>
  <PostClientFlow>
    <Request/>
    <Response>
      <Step>
        <Name>FC-logICT</Name>
      </Step>
      <Step>
        <Name>FC-logSIEM</Name>
      </Step>
      <Step>
        <Name>FC-logTS</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>/card-s-orch-corp-folder-be-at</BasePath>
  </HTTPProxyConnection>
  <RouteRule name="rr-target-at">
    <TargetEndpoint>te-AT</TargetEndpoint>
    <Condition>request.header.Host JavaRegex "(.*\.at.*)"</Condition>
  </RouteRule>
</ProxyEndpoint>
